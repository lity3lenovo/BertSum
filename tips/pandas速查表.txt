import numpy as np
import pandas as pd
df = pd.DataFrame(np.arange(0,60,2).reshape(10,3),columns=list('abc'))

【按行列选取数据】
一、当每列已有column name时，用 df [ 'a' ] 就能选取出一整列数据。如果你知道column names 和index，
且两者都很好输入，可以选择 .loc


df.loc[0, 'a']

df.loc[0:3, ['a', 'b']]

df.loc[[1, 5], ['b', 'c']]

二、如果我们嫌column name太长了，输入不方便，有或者index是一列时间序列，更不好输入，那就可以选择 .iloc了。这边的 i 我觉得代表index，比较好记点。

df.iloc[1,1]
df.iloc[0:3, [0,1]]
df.iloc[[0, 3, 5], 0:2]

三、.ix 的功能就更强大了，它允许我们混合使用下标和名称进行选取。 可以说它涵盖了前面所有的用法。
基本上把前面的都换成df.ix 都能成功，但是有一点，就是

df.ix [ [ ..1.. ], [..2..] ], ?1框内必须统一，
必须同时是下标或者名称，2框也一样。 BTW， 1框是用来指定row，2框是指定column， 当然上面所有的取数方法都是这个规则。

【按数值约束条件选取数据】
#取a列>1的b列的值
print(df.query('a>1').b.values)
print(df['b'][df['a']>1].values)
print(df[df['a']>1]['b'].values)

【按列取值】
df['a']
df.a
df.icol(0)#第一列
data.ix[data.b>6,3:4]  #选择'b'列中大于6所在的行中的第4列
